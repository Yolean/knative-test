---
apiVersion: v1
kind: Namespace
metadata:
  name: knative-eventing
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: knative-channels-bus
rules:
- apiGroups:
  - channels.knative.dev
  resources:
  - buses
  - clusterbuses
  verbs:
  - get
  - watch
  - list
- apiGroups:
  - channels.knative.dev
  resources:
  - channels
  - subscriptions
  verbs:
  - get
  - watch
  - list
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: eventing-controller
  namespace: knative-eventing
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: bus-operator
  namespace: knative-eventing
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: eventing-controller-admin
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
- kind: ServiceAccount
  name: eventing-controller
  namespace: knative-eventing
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: bus-operator-manage
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: knative-channels-bus
subjects:
- kind: ServiceAccount
  name: bus-operator
  namespace: knative-eventing
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: buses.channels.knative.dev
spec:
  group: channels.knative.dev
  names:
    categories:
    - all
    - knative
    - kbus
    - eventing
    kind: Bus
    plural: buses
    singular: bus
  scope: Namespaced
  version: v1alpha1
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: channels.channels.knative.dev
spec:
  group: channels.knative.dev
  names:
    categories:
    - all
    - knative
    - eventing
    kind: Channel
    plural: channels
    shortNames:
    - chan
    singular: channel
  scope: Namespaced
  version: v1alpha1
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: clusterbuses.channels.knative.dev
spec:
  group: channels.knative.dev
  names:
    categories:
    - all
    - knative
    - kbus
    - eventing
    kind: ClusterBus
    plural: clusterbuses
    shortNames:
    - cbus
    singular: clusterbus
  scope: Cluster
  version: v1alpha1
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: clustereventsources.feeds.knative.dev
spec:
  group: feeds.knative.dev
  names:
    categories:
    - all
    - knative
    - keventsource
    - eventing
    kind: ClusterEventSource
    plural: clustereventsources
    singular: clustereventsource
  scope: Cluster
  version: v1alpha1
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: clustereventtypes.feeds.knative.dev
spec:
  group: feeds.knative.dev
  names:
    categories:
    - all
    - knative
    - keventtype
    - eventing
    kind: ClusterEventType
    plural: clustereventtypes
    singular: clustereventsource
  scope: Cluster
  version: v1alpha1
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: eventsources.feeds.knative.dev
spec:
  group: feeds.knative.dev
  names:
    categories:
    - all
    - knative
    - keventsource
    - eventing
    kind: EventSource
    plural: eventsources
    singular: eventsource
  scope: Namespaced
  version: v1alpha1
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: eventtypes.feeds.knative.dev
spec:
  group: feeds.knative.dev
  names:
    categories:
    - all
    - knative
    - keventtype
    - eventing
    kind: EventType
    plural: eventtypes
    singular: eventtype
  scope: Namespaced
  version: v1alpha1
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: feeds.feeds.knative.dev
spec:
  group: feeds.knative.dev
  names:
    categories:
    - all
    - knative
    - eventing
    kind: Feed
    plural: feeds
    singular: feed
  scope: Namespaced
  version: v1alpha1
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: flows.flows.knative.dev
spec:
  group: flows.knative.dev
  names:
    categories:
    - all
    - knative
    - eventing
    kind: Flow
    plural: flows
    singular: flow
  scope: Namespaced
  version: v1alpha1
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: subscriptions.channels.knative.dev
spec:
  group: channels.knative.dev
  names:
    categories:
    - all
    - knative
    - eventing
    kind: Subscription
    plural: subscriptions
    shortNames:
    - sub
    singular: subscription
  scope: Namespaced
  version: v1alpha1
---
apiVersion: v1
data:
  default-cluster-bus: stub
kind: ConfigMap
metadata:
  name: flow-controller-config
  namespace: knative-eventing
---
apiVersion: v1
kind: Service
metadata:
  labels:
    role: webhook
  name: webhook
  namespace: knative-eventing
spec:
  ports:
  - port: 443
    targetPort: 443
  selector:
    role: webhook
---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: eventing-controller
  namespace: knative-eventing
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: eventing-controller
    spec:
      containers:
      - args:
        - -logtostderr
        - -stderrthreshold
        - INFO
        image: gcr.io/knative-releases/github.com/knative/eventing/cmd/controller@sha256:f7071ea22cdedb9dfc0641f2f6676c1ee05487db1488a77588d3c56820b6ced5
        name: eventing-controller
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/config-logging
          name: config-logging
      serviceAccountName: eventing-controller
      volumes:
      - configMap:
          name: config-logging
        name: config-logging
---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  name: webhook
  namespace: knative-eventing
spec:
  replicas: 1
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "false"
      labels:
        app: webhook
        role: webhook
    spec:
      containers:
      - image: gcr.io/knative-releases/github.com/knative/eventing/cmd/webhook@sha256:9c67c4588dbd3dc23346427f1cf11867deaaa71c99189c23d42be4a28d0f784a
        name: webhook
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/config-logging
          name: config-logging
      serviceAccountName: eventing-controller
      volumes:
      - configMap:
          name: config-logging
        name: config-logging
---
apiVersion: v1
data:
  loglevel.controller: info
  loglevel.webhook: info
  zap-logger-config: |
    {
      "level": "info",
      "development": false,
      "outputPaths": ["stdout"],
      "errorOutputPaths": ["stderr"],
      "encoding": "json",
      "encoderConfig": {
        "timeKey": "ts",
        "levelKey": "level",
        "nameKey": "logger",
        "callerKey": "caller",
        "messageKey": "msg",
        "stacktraceKey": "stacktrace",
        "lineEnding": "",
        "levelEncoder": "",
        "timeEncoder": "iso8601",
        "durationEncoder": "",
        "callerEncoder": ""
      }
    }
kind: ConfigMap
metadata:
  name: config-logging
  namespace: knative-eventing
